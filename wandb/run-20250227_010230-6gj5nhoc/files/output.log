
Starting Epoch 1/50
Epoch 1/50, Train Loss: 37.0911, Val Loss: 0.2359, Val Acc: 0.9261

Starting Epoch 2/50
Epoch 2/50, Train Loss: 15.9234, Val Loss: 0.2263, Val Acc: 0.9178

Starting Epoch 3/50
Epoch 3/50, Train Loss: 11.3538, Val Loss: 0.2225, Val Acc: 0.9217

Starting Epoch 4/50
Epoch 4/50, Train Loss: 8.3538, Val Loss: 0.2617, Val Acc: 0.9256

Starting Epoch 5/50
Epoch 5/50, Train Loss: 7.4434, Val Loss: 0.2631, Val Acc: 0.9322

Starting Epoch 6/50
Epoch 6/50, Train Loss: 5.7203, Val Loss: 0.2844, Val Acc: 0.9161

Starting Epoch 7/50
Epoch 7/50, Train Loss: 5.8741, Val Loss: 0.2972, Val Acc: 0.9300

Starting Epoch 8/50
Epoch 8/50, Train Loss: 4.2696, Val Loss: 0.3014, Val Acc: 0.9189

Starting Epoch 9/50
Epoch 9/50, Train Loss: 4.6774, Val Loss: 0.2989, Val Acc: 0.9272

Starting Epoch 10/50
Epoch 10/50, Train Loss: 4.4777, Val Loss: 0.2999, Val Acc: 0.9261

Starting Epoch 11/50
Epoch 11/50, Train Loss: 3.3456, Val Loss: 0.3286, Val Acc: 0.9239

Starting Epoch 12/50
Epoch 12/50, Train Loss: 3.5896, Val Loss: 0.3119, Val Acc: 0.9233

Starting Epoch 13/50
Epoch 13/50, Train Loss: 3.7528, Val Loss: 0.3813, Val Acc: 0.9278
Early stopping at epoch 13 as validation loss did not improve for 10 epochs.
C:\Users\arkzs\AppData\Local\Temp\ipykernel_47156\3391021187.py:2: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load("best_multimodal_model.pth"))
Test Loss: 0.3438, Test Accuracy: 0.8811
